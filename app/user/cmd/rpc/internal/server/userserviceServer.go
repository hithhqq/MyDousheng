// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package server

import (
	"context"

	"MyDouSheng/app/user/cmd/rpc/internal/logic"
	"MyDouSheng/app/user/cmd/rpc/internal/svc"
	"MyDouSheng/app/user/cmd/rpc/pb"
)

type UserserviceServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedUserserviceServer
}

func NewUserserviceServer(svcCtx *svc.ServiceContext) *UserserviceServer {
	return &UserserviceServer{
		svcCtx: svcCtx,
	}
}

func (s *UserserviceServer) Login(ctx context.Context, in *pb.LoginReq) (*pb.LoginResp, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *UserserviceServer) Register(ctx context.Context, in *pb.RegisterReq) (*pb.RegisterResp, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

func (s *UserserviceServer) GetUserInfo(ctx context.Context, in *pb.GetUserInfoReq) (*pb.GetUserInfoResp, error) {
	l := logic.NewGetUserInfoLogic(ctx, s.svcCtx)
	return l.GetUserInfo(in)
}

// rpc generateToken(GenerateTokenReq) returns(GenerateTokenResp);
func (s *UserserviceServer) UpdateAttention(ctx context.Context, in *pb.UpdateUserReq) (*pb.UpdateUserResp, error) {
	l := logic.NewUpdateAttentionLogic(ctx, s.svcCtx)
	return l.UpdateAttention(in)
}

func (s *UserserviceServer) UpdateAttentionRollback(ctx context.Context, in *pb.UpdateUserReq) (*pb.UpdateUserResp, error) {
	l := logic.NewUpdateAttentionRollbackLogic(ctx, s.svcCtx)
	return l.UpdateAttentionRollback(in)
}

func (s *UserserviceServer) UpdateWorkcount(ctx context.Context, in *pb.UpdateWorkCountReq) (*pb.UpdateWorkCountResp, error) {
	l := logic.NewUpdateWorkcountLogic(ctx, s.svcCtx)
	return l.UpdateWorkcount(in)
}

func (s *UserserviceServer) UpdateWorkcountRollback(ctx context.Context, in *pb.UpdateWorkCountReq) (*pb.UpdateWorkCountResp, error) {
	l := logic.NewUpdateWorkcountRollbackLogic(ctx, s.svcCtx)
	return l.UpdateWorkcountRollback(in)
}
